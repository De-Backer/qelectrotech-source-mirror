.TH "PartArc" 3 "Thu Aug 27 2020" "Version 0.8-dev" "QElectroTech" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PartArc \- The \fBPartArc\fP class This class represents an elliptical arc primitive which may be used to compose the drawing of an electrical element within the element editor\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <partarc\&.h>\fP
.PP
Inherits \fBAbstractPartEllipse\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum { \fBType\fP = UserType + 1101 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPartArc\fP (\fBQETElementEditor\fP *editor, QGraphicsItem *parent=nullptr)"
.br
.RI "\fBPartArc::PartArc\fP Constructor\&. "
.ti -1c
.RI "\fB~PartArc\fP () override"
.br
.RI "\fBPartArc::~PartArc\fP Destructor\&. "
.ti -1c
.RI "int \fBtype\fP () const override"
.br
.ti -1c
.RI "void \fBpaint\fP (QPainter *, const QStyleOptionGraphicsItem *, QWidget *=nullptr) override"
.br
.RI "\fBPartArc::paint\fP Draw this arc\&. "
.ti -1c
.RI "QString \fBname\fP () const override"
.br
.ti -1c
.RI "QString \fBxmlName\fP () const override"
.br
.ti -1c
.RI "const QDomElement \fBtoXml\fP (QDomDocument &) const override"
.br
.RI "\fBPartArc::toXml\fP Export this arc in xml\&. "
.ti -1c
.RI "void \fBfromXml\fP (const QDomElement &) override"
.br
.RI "\fBPartArc::fromXml\fP Import the properties of this arc from a xml element\&. "
.ti -1c
.RI "QPainterPath \fBshape\fP () const override"
.br
.RI "\fBPartArc::shape\fP\&. "
.ti -1c
.RI "QPainterPath \fBshadowShape\fP () const override"
.br
.ti -1c
.RI "void \fBsetRect\fP (const QRectF &\fBrect\fP) override"
.br
.RI "\fBAbstractPartEllipse::setRect\fP Sets the item's ellipse geometry to rect\&. The rectangle's left edge defines the left edge of the ellipse, and the rectangle's top edge describes the top of the ellipse The height and width of the rectangle describe the height and width of the ellipse\&. "
.ti -1c
.RI "void \fBsetStartAngle\fP (const int &start_angle) override"
.br
.RI "\fBAbstractPartEllipse::setStartAngle\fP Sets the start angle for an ellipse segment to angle, which is in 16ths of a degree\&. This angle is used together with \fBspanAngle()\fP for representing an ellipse segment (a pie)\&. By default, the start angle is 0\&. "
.ti -1c
.RI "void \fBsetSpanAngle\fP (const int &span_angle) override"
.br
.RI "\fBAbstractPartEllipse::setSpanAngle\fP Returns the span angle of an ellipse segment in 16ths of a degree\&. This angle is used together with \fBstartAngle()\fP for representing an ellipse segment (a pie)\&. By default, this function returns 5760 (360 * 16, a full ellipse)\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBmouseReleaseEvent\fP (QGraphicsSceneMouseEvent *event) override"
.br
.RI "\fBPartArc::mouseReleaseEvent\fP Handle mouse release event\&. "
.ti -1c
.RI "QVariant \fBitemChange\fP (GraphicsItemChange change, const QVariant &value) override"
.br
.RI "\fBPartArc::itemChange\fP\&. "
.ti -1c
.RI "bool \fBsceneEventFilter\fP (QGraphicsItem *watched, QEvent *event) override"
.br
.RI "\fBPartArc::sceneEventFilter\fP\&. "
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBPartArc\fP (const \fBPartArc\fP &)"
.br
.ti -1c
.RI "void \fBswitchResizeMode\fP ()"
.br
.RI "\fBPartArc::switchResizeMode\fP\&. "
.ti -1c
.RI "void \fBadjusteHandlerPos\fP ()"
.br
.RI "\fBPartArc::adjusteHandlerPos\fP\&. "
.ti -1c
.RI "void \fBhandlerMousePressEvent\fP (\fBQetGraphicsHandlerItem\fP *qghi, QGraphicsSceneMouseEvent *event)"
.br
.RI "\fBPartArc::handlerMousePressEvent\fP\&. "
.ti -1c
.RI "void \fBhandlerMouseMoveEvent\fP (\fBQetGraphicsHandlerItem\fP *qghi, QGraphicsSceneMouseEvent *event)"
.br
.RI "\fBPartArc::handlerMouseMoveEvent\fP\&. "
.ti -1c
.RI "void \fBhandlerMouseReleaseEvent\fP (\fBQetGraphicsHandlerItem\fP *qghi, QGraphicsSceneMouseEvent *event)"
.br
.RI "\fBPartArc::handlerMouseReleaseEvent\fP\&. "
.ti -1c
.RI "void \fBsceneSelectionChanged\fP ()"
.br
.RI "\fBPartArc::sceneSelectionChanged\fP When the scene selection change, if there are several primitive selected, we remove the handler of this item\&. "
.ti -1c
.RI "void \fBaddHandler\fP ()"
.br
.RI "\fBPartArc::addHandler\fP Add handlers for this item\&. "
.ti -1c
.RI "void \fBremoveHandler\fP ()"
.br
.RI "\fBPartArc::removeHandler\fP Remove the handlers of this item\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBQPropertyUndoCommand\fP * \fBm_undo_command\fP = nullptr"
.br
.ti -1c
.RI "\fBQPropertyUndoCommand\fP * \fBm_undo_command2\fP = nullptr"
.br
.ti -1c
.RI "int \fBm_resize_mode\fP = 1"
.br
.ti -1c
.RI "int \fBm_vector_index\fP = \-1"
.br
.ti -1c
.RI "QPointF \fBm_span_point\fP"
.br
.ti -1c
.RI "QVector< \fBQetGraphicsHandlerItem\fP * > \fBm_handler_vector\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBPartArc\fP class This class represents an elliptical arc primitive which may be used to compose the drawing of an electrical element within the element editor\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIType \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PartArc::PartArc (\fBQETElementEditor\fP * editor, QGraphicsItem * parent = \fCnullptr\fP)"

.PP
\fBPartArc::PartArc\fP Constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIeditor\fP : \fBQETElementEditor\fP of this part 
.br
\fIparent\fP : parent item 
.RE
.PP

.SS "PartArc::~PartArc ()\fC [override]\fP"

.PP
\fBPartArc::~PartArc\fP Destructor\&. 
.SS "PartArc::PartArc (const \fBPartArc\fP &)\fC [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void PartArc::addHandler ()\fC [private]\fP"

.PP
\fBPartArc::addHandler\fP Add handlers for this item\&. 
.SS "void PartArc::adjusteHandlerPos ()\fC [private]\fP"

.PP
\fBPartArc::adjusteHandlerPos\fP\&. 
.SS "void PartArc::fromXml (const QDomElement & qde)\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartArc::fromXml\fP Import the properties of this arc from a xml element\&. 
.PP
\fBParameters\fP
.RS 4
\fIqde\fP : Xml document to use\&. 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "void PartArc::handlerMouseMoveEvent (\fBQetGraphicsHandlerItem\fP * qghi, QGraphicsSceneMouseEvent * event)\fC [private]\fP"

.PP
\fBPartArc::handlerMouseMoveEvent\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIqghi\fP 
.br
\fIevent\fP 
.RE
.PP

.SS "void PartArc::handlerMousePressEvent (\fBQetGraphicsHandlerItem\fP * qghi, QGraphicsSceneMouseEvent * event)\fC [private]\fP"

.PP
\fBPartArc::handlerMousePressEvent\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIqghi\fP 
.br
\fIevent\fP 
.RE
.PP

.SS "void PartArc::handlerMouseReleaseEvent (\fBQetGraphicsHandlerItem\fP * qghi, QGraphicsSceneMouseEvent * event)\fC [private]\fP"

.PP
\fBPartArc::handlerMouseReleaseEvent\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIqghi\fP 
.br
\fIevent\fP 
.RE
.PP

.SS "QVariant PartArc::itemChange (GraphicsItemChange change, const QVariant & value)\fC [override]\fP, \fC [protected]\fP"

.PP
\fBPartArc::itemChange\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIchange\fP 
.br
\fIvalue\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "void PartArc::mouseReleaseEvent (QGraphicsSceneMouseEvent * event)\fC [override]\fP, \fC [protected]\fP"

.PP
\fBPartArc::mouseReleaseEvent\fP Handle mouse release event\&. 
.PP
\fBParameters\fP
.RS 4
\fIevent\fP 
.RE
.PP

.SS "QString PartArc::name () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
\fBReturns\fP
.RS 4
the name of the primitive 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "void PartArc::paint (QPainter * painter, const QStyleOptionGraphicsItem * options, QWidget * widget = \fCnullptr\fP)\fC [override]\fP"

.PP
\fBPartArc::paint\fP Draw this arc\&. 
.PP
\fBParameters\fP
.RS 4
\fIpainter\fP 
.br
\fIoptions\fP 
.br
\fIwidget\fP 
.RE
.PP

.SS "void PartArc::removeHandler ()\fC [private]\fP"

.PP
\fBPartArc::removeHandler\fP Remove the handlers of this item\&. 
.SS "bool PartArc::sceneEventFilter (QGraphicsItem * watched, QEvent * event)\fC [override]\fP, \fC [protected]\fP"

.PP
\fBPartArc::sceneEventFilter\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIwatched\fP 
.br
\fIevent\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "void PartArc::sceneSelectionChanged ()\fC [private]\fP"

.PP
\fBPartArc::sceneSelectionChanged\fP When the scene selection change, if there are several primitive selected, we remove the handler of this item\&. 
.SS "void PartArc::setRect (const QRectF & rect)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
\fBAbstractPartEllipse::setRect\fP Sets the item's ellipse geometry to rect\&. The rectangle's left edge defines the left edge of the ellipse, and the rectangle's top edge describes the top of the ellipse The height and width of the rectangle describe the height and width of the ellipse\&. 
.PP
\fBParameters\fP
.RS 4
\fIrect\fP 
.RE
.PP

.PP
Reimplemented from \fBAbstractPartEllipse\fP\&.
.SS "void PartArc::setSpanAngle (const int & span_angle)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
\fBAbstractPartEllipse::setSpanAngle\fP Returns the span angle of an ellipse segment in 16ths of a degree\&. This angle is used together with \fBstartAngle()\fP for representing an ellipse segment (a pie)\&. By default, this function returns 5760 (360 * 16, a full ellipse)\&. 
.PP
\fBParameters\fP
.RS 4
\fIspan_angle\fP 
.RE
.PP

.PP
Reimplemented from \fBAbstractPartEllipse\fP\&.
.SS "void PartArc::setStartAngle (const int & start_angle)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
\fBAbstractPartEllipse::setStartAngle\fP Sets the start angle for an ellipse segment to angle, which is in 16ths of a degree\&. This angle is used together with \fBspanAngle()\fP for representing an ellipse segment (a pie)\&. By default, the start angle is 0\&. 
.PP
\fBParameters\fP
.RS 4
\fIstart_angle\fP 
.RE
.PP

.PP
Reimplemented from \fBAbstractPartEllipse\fP\&.
.SS "QPainterPath PartArc::shadowShape () const\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBCustomElementGraphicPart\fP\&.
.SS "QPainterPath PartArc::shape () const\fC [override]\fP"

.PP
\fBPartArc::shape\fP\&. 
.PP
\fBReturns\fP
.RS 4
the shape of this item 
.RE
.PP

.SS "void PartArc::switchResizeMode ()\fC [private]\fP"

.PP
\fBPartArc::switchResizeMode\fP\&. 
.SS "const QDomElement PartArc::toXml (QDomDocument & xml_document) const\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartArc::toXml\fP Export this arc in xml\&. 
.PP
\fBParameters\fP
.RS 4
\fIxml_document\fP : Xml document to use for create the xml element\&. 
.RE
.PP
\fBReturns\fP
.RS 4
: an xml element that describe this arc 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "int PartArc::type () const\fC [inline]\fP, \fC [override]\fP"
Enable the use of qgraphicsitem_cast to safely cast a QGraphicsItem into a \fBPartArc\fP\&. 
.PP
\fBReturns\fP
.RS 4
the QGraphicsItem type 
.RE
.PP

.SS "QString PartArc::xmlName () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
\fBReturns\fP
.RS 4
the name that will be used as XML tag when exporting the primitive 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "QVector<\fBQetGraphicsHandlerItem\fP *> PartArc::m_handler_vector\fC [private]\fP"

.SS "int PartArc::m_resize_mode = 1\fC [private]\fP"

.SS "QPointF PartArc::m_span_point\fC [private]\fP"

.SS "\fBQPropertyUndoCommand\fP* PartArc::m_undo_command = nullptr\fC [private]\fP"

.SS "\fBQPropertyUndoCommand\fP* PartArc::m_undo_command2 = nullptr\fC [private]\fP"

.SS "int PartArc::m_vector_index = \-1\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for QElectroTech from the source code\&.
