.TH "PartPolygon" 3 "Thu Aug 27 2020" "Version 0.8-dev" "QElectroTech" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PartPolygon \- The \fBPartPolygon\fP class This class represents a polygon primitive which may be used to compose the drawing of an electrical element within the element editor\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <partpolygon\&.h>\fP
.PP
Inherits \fBCustomElementGraphicPart\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum { \fBType\fP = UserType + 1105 }"
.br
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBclosedChange\fP ()"
.br
.ti -1c
.RI "void \fBpolygonChanged\fP ()"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPartPolygon\fP (\fBQETElementEditor\fP *editor, QGraphicsItem *parent=nullptr)"
.br
.RI "\fBPartPolygon::PartPolygon\fP Constructor\&. "
.ti -1c
.RI "\fB~PartPolygon\fP () override"
.br
.RI "\fBPartPolygon::~PartPolygon\fP\&. "
.ti -1c
.RI "int \fBtype\fP () const override"
.br
.ti -1c
.RI "void \fBpaint\fP (QPainter *, const QStyleOptionGraphicsItem *, QWidget *) override"
.br
.RI "\fBPartPolygon::paint\fP Draw this polygon\&. "
.ti -1c
.RI "QString \fBname\fP () const override"
.br
.ti -1c
.RI "QString \fBxmlName\fP () const override"
.br
.ti -1c
.RI "void \fBfromXml\fP (const QDomElement &) override"
.br
.RI "\fBPartPolygon::fromXml\fP Import the properties of this polygon from a xml element\&. "
.ti -1c
.RI "const QDomElement \fBtoXml\fP (QDomDocument &) const override"
.br
.RI "\fBPartPolygon::toXml\fP Export this polygin in xml\&. "
.ti -1c
.RI "QPainterPath \fBshape\fP () const override"
.br
.RI "\fBPartPolygon::shape\fP\&. "
.ti -1c
.RI "QPainterPath \fBshadowShape\fP () const override"
.br
.ti -1c
.RI "QRectF \fBboundingRect\fP () const override"
.br
.RI "\fBPartPolygon::boundingRect\fP\&. "
.ti -1c
.RI "bool \fBisUseless\fP () const override"
.br
.RI "\fBPartPolygon::isUseless\fP\&. "
.ti -1c
.RI "QRectF \fBsceneGeometricRect\fP () const override"
.br
.RI "\fBPartPolygon::sceneGeometricRect\fP\&. "
.ti -1c
.RI "void \fBstartUserTransformation\fP (const QRectF &) override"
.br
.RI "\fBPartPolygon::startUserTransformation\fP Start the user-induced transformation, provided this primitive is contained within the initial_selection_rect bounding rectangle\&. "
.ti -1c
.RI "void \fBhandleUserTransformation\fP (const QRectF &, const QRectF &) override"
.br
.RI "\fBPartPolygon::handleUserTransformation\fP Handle the user-induced transformation from initial_selection_rect to new_selection_rect\&. "
.ti -1c
.RI "\fBQET::ScalingMethod\fP \fBpreferredScalingMethod\fP () const override"
.br
.RI "\fBPartPolygon::preferredScalingMethod\fP This method is called by the decorator when it needs to determine the best way to interactively scale a primitive\&. It is typically called when only a single primitive is being scaled\&. "
.ti -1c
.RI "QPolygonF \fBpolygon\fP () const"
.br
.RI "\fBPartPolygon::polygon\fP\&. "
.ti -1c
.RI "void \fBsetPolygon\fP (const QPolygonF &\fBpolygon\fP)"
.br
.RI "\fBPartPolygon::setPolygon\fP Sets the item's polygon to be the given polygon\&. "
.ti -1c
.RI "void \fBaddPoint\fP (const QPointF &point)"
.br
.RI "\fBPartPolygon::addPoint\fP Add new point to polygon\&. "
.ti -1c
.RI "void \fBsetLastPoint\fP (const QPointF &point)"
.br
.RI "\fBPartPolygon::setLastPoint\fP Set the last point of polygon to point\&. "
.ti -1c
.RI "void \fBremoveLastPoint\fP ()"
.br
.RI "\fBPartPolygon::removeLastPoint\fP Remove the last point of polygon\&. "
.ti -1c
.RI "bool \fBisClosed\fP () const"
.br
.ti -1c
.RI "void \fBsetClosed\fP (bool close)"
.br
.ti -1c
.RI "void \fBsetHandlerColor\fP (QPointF pos, const QColor &\fBcolor\fP) final"
.br
.RI "\fBPartPolygon::setHandlerColor\fP Set the handler at pos pos (in polygon coordinate) to color color\&. "
.ti -1c
.RI "void \fBresetAllHandlerColor\fP () final"
.br
.RI "\fBPartPolygon::resetAllHandlerColor\fP Reset the color of every handlers\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "QVariant \fBitemChange\fP (GraphicsItemChange change, const QVariant &value) override"
.br
.RI "\fBPartPolygon::itemChange\fP\&. "
.ti -1c
.RI "bool \fBsceneEventFilter\fP (QGraphicsItem *watched, QEvent *event) override"
.br
.RI "\fBPartPolygon::sceneEventFilter\fP\&. "
.ti -1c
.RI "void \fBcontextMenuEvent\fP (QGraphicsSceneContextMenuEvent *event) override"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBclosed\fP"
.br
.ti -1c
.RI "QPolygonF \fBpolygon\fP"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBPartPolygon\fP (const \fBPartPolygon\fP &)"
.br
.ti -1c
.RI "void \fBadjusteHandlerPos\fP ()"
.br
.RI "\fBPartPolygon::adjusteHandlerPos\fP\&. "
.ti -1c
.RI "void \fBhandlerMousePressEvent\fP (\fBQetGraphicsHandlerItem\fP *qghi, QGraphicsSceneMouseEvent *event)"
.br
.RI "\fBPartPolygon::handlerMousePressEvent\fP\&. "
.ti -1c
.RI "void \fBhandlerMouseMoveEvent\fP (\fBQetGraphicsHandlerItem\fP *qghi, QGraphicsSceneMouseEvent *event)"
.br
.RI "\fBPartPolygon::handlerMouseMoveEvent\fP\&. "
.ti -1c
.RI "void \fBhandlerMouseReleaseEvent\fP (\fBQetGraphicsHandlerItem\fP *qghi, QGraphicsSceneMouseEvent *event)"
.br
.RI "\fBPartPolygon::handlerMouseReleaseEvent\fP\&. "
.ti -1c
.RI "void \fBsceneSelectionChanged\fP ()"
.br
.RI "\fBPartPolygon::sceneSelectionChanged\fP When the scene selection change, if there are several primitive selected, we remove the handler of this item\&. "
.ti -1c
.RI "void \fBaddHandler\fP ()"
.br
.RI "\fBPartPolygon::addHandler\fP Add handlers for this item\&. "
.ti -1c
.RI "void \fBremoveHandler\fP ()"
.br
.RI "\fBPartPolygon::removeHandler\fP Remove the handlers of this item\&. "
.ti -1c
.RI "void \fBinsertPoint\fP ()"
.br
.RI "\fBPartPolygon::insertPoint\fP Insert a point in this polygone\&. "
.ti -1c
.RI "void \fBremovePoint\fP ()"
.br
.RI "\fBPartPolygon::removePoint\fP remove a point on this polygon\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fBm_closed\fP"
.br
.ti -1c
.RI "QList< QPointF > \fBsaved_points_\fP"
.br
.ti -1c
.RI "QPolygonF \fBm_polygon\fP"
.br
.ti -1c
.RI "\fBQPropertyUndoCommand\fP * \fBm_undo_command\fP"
.br
.ti -1c
.RI "int \fBm_vector_index\fP = \-1"
.br
.ti -1c
.RI "QVector< \fBQetGraphicsHandlerItem\fP * > \fBm_handler_vector\fP"
.br
.ti -1c
.RI "QAction * \fBm_insert_point\fP"
.br
.ti -1c
.RI "QAction * \fBm_remove_point\fP"
.br
.ti -1c
.RI "QPointF \fBm_context_menu_pos\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBPartPolygon\fP class This class represents a polygon primitive which may be used to compose the drawing of an electrical element within the element editor\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIType \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PartPolygon::PartPolygon (\fBQETElementEditor\fP * editor, QGraphicsItem * parent = \fCnullptr\fP)"

.PP
\fBPartPolygon::PartPolygon\fP Constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIeditor\fP : editor of this item 
.br
\fIparent\fP : parent item 
.RE
.PP

.SS "PartPolygon::~PartPolygon ()\fC [override]\fP"

.PP
\fBPartPolygon::~PartPolygon\fP\&. 
.SS "PartPolygon::PartPolygon (const \fBPartPolygon\fP &)\fC [private]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void PartPolygon::addHandler ()\fC [private]\fP"

.PP
\fBPartPolygon::addHandler\fP Add handlers for this item\&. 
.SS "void PartPolygon::addPoint (const QPointF & point)"

.PP
\fBPartPolygon::addPoint\fP Add new point to polygon\&. 
.PP
\fBParameters\fP
.RS 4
\fIpoint\fP 
.RE
.PP

.SS "void PartPolygon::adjusteHandlerPos ()\fC [private]\fP"

.PP
\fBPartPolygon::adjusteHandlerPos\fP\&. 
.SS "QRectF PartPolygon::boundingRect () const\fC [override]\fP"

.PP
\fBPartPolygon::boundingRect\fP\&. 
.PP
\fBReturns\fP
.RS 4
the bounding rect of this item 
.RE
.PP

.SS "void PartPolygon::closedChange ()\fC [signal]\fP"

.SS "void PartPolygon::contextMenuEvent (QGraphicsSceneContextMenuEvent * event)\fC [override]\fP, \fC [protected]\fP"

.SS "void PartPolygon::fromXml (const QDomElement & qde)\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::fromXml\fP Import the properties of this polygon from a xml element\&. 
.PP
\fBParameters\fP
.RS 4
\fIqde\fP : Xml document to use 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "void PartPolygon::handlerMouseMoveEvent (\fBQetGraphicsHandlerItem\fP * qghi, QGraphicsSceneMouseEvent * event)\fC [private]\fP"

.PP
\fBPartPolygon::handlerMouseMoveEvent\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIqghi\fP 
.br
\fIevent\fP 
.RE
.PP

.SS "void PartPolygon::handlerMousePressEvent (\fBQetGraphicsHandlerItem\fP * qghi, QGraphicsSceneMouseEvent * event)\fC [private]\fP"

.PP
\fBPartPolygon::handlerMousePressEvent\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIqghi\fP 
.br
\fIevent\fP 
.RE
.PP

.SS "void PartPolygon::handlerMouseReleaseEvent (\fBQetGraphicsHandlerItem\fP * qghi, QGraphicsSceneMouseEvent * event)\fC [private]\fP"

.PP
\fBPartPolygon::handlerMouseReleaseEvent\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIqghi\fP 
.br
\fIevent\fP 
.RE
.PP

.SS "void PartPolygon::handleUserTransformation (const QRectF & initial_selection_rect, const QRectF & new_selection_rect)\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::handleUserTransformation\fP Handle the user-induced transformation from initial_selection_rect to new_selection_rect\&. 
.PP
\fBParameters\fP
.RS 4
\fIinitial_selection_rect\fP 
.br
\fInew_selection_rect\fP 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "void PartPolygon::insertPoint ()\fC [private]\fP"

.PP
\fBPartPolygon::insertPoint\fP Insert a point in this polygone\&. 
.SS "bool PartPolygon::isClosed () const\fC [inline]\fP"

.SS "bool PartPolygon::isUseless () const\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::isUseless\fP\&. 
.PP
\fBReturns\fP
.RS 4
true if this part is irrelevant and does not deserve to be Retained / registered\&. A polygon is relevant when he have 2 differents points 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "QVariant PartPolygon::itemChange (GraphicsItemChange change, const QVariant & value)\fC [override]\fP, \fC [protected]\fP"

.PP
\fBPartPolygon::itemChange\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIchange\fP 
.br
\fIvalue\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "QString PartPolygon::name () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
\fBReturns\fP
.RS 4
the name of the primitive 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "void PartPolygon::paint (QPainter * painter, const QStyleOptionGraphicsItem * options, QWidget * widget)\fC [override]\fP"

.PP
\fBPartPolygon::paint\fP Draw this polygon\&. 
.PP
\fBParameters\fP
.RS 4
\fIpainter\fP 
.br
\fIoptions\fP 
.br
\fIwidget\fP 
.RE
.PP

.SS "QPolygonF PartPolygon::polygon () const"

.PP
\fBPartPolygon::polygon\fP\&. 
.PP
\fBReturns\fP
.RS 4
the item's polygon, or an empty polygon if no polygon has been set\&. 
.RE
.PP

.SS "void PartPolygon::polygonChanged ()\fC [signal]\fP"

.SS "\fBQET::ScalingMethod\fP PartPolygon::preferredScalingMethod () const\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::preferredScalingMethod\fP This method is called by the decorator when it needs to determine the best way to interactively scale a primitive\&. It is typically called when only a single primitive is being scaled\&. 
.PP
\fBReturns\fP
.RS 4
: This reimplementation systematically returns \fBQET::RoundScaleRatios\fP\&. 
.RE
.PP

.PP
Reimplemented from \fBCustomElementPart\fP\&.
.SS "void PartPolygon::removeHandler ()\fC [private]\fP"

.PP
\fBPartPolygon::removeHandler\fP Remove the handlers of this item\&. 
.SS "void PartPolygon::removeLastPoint ()"

.PP
\fBPartPolygon::removeLastPoint\fP Remove the last point of polygon\&. 
.SS "void PartPolygon::removePoint ()\fC [private]\fP"

.PP
\fBPartPolygon::removePoint\fP remove a point on this polygon\&. 
.SS "void PartPolygon::resetAllHandlerColor ()\fC [final]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::resetAllHandlerColor\fP Reset the color of every handlers\&. 
.PP
Reimplemented from \fBCustomElementGraphicPart\fP\&.
.SS "bool PartPolygon::sceneEventFilter (QGraphicsItem * watched, QEvent * event)\fC [override]\fP, \fC [protected]\fP"

.PP
\fBPartPolygon::sceneEventFilter\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIwatched\fP 
.br
\fIevent\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "QRectF PartPolygon::sceneGeometricRect () const\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::sceneGeometricRect\fP\&. 
.PP
\fBReturns\fP
.RS 4
the minimum, margin-less rectangle this part can fit into, in scene coordinates\&. It is different from \fBboundingRect()\fP because it is not supposed to imply any margin, and it is different from shape because it is a regular rectangle, not a complex shape\&. 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "void PartPolygon::sceneSelectionChanged ()\fC [private]\fP"

.PP
\fBPartPolygon::sceneSelectionChanged\fP When the scene selection change, if there are several primitive selected, we remove the handler of this item\&. 
.SS "void PartPolygon::setClosed (bool close)"

.SS "void PartPolygon::setHandlerColor (QPointF pos, const QColor & color)\fC [final]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::setHandlerColor\fP Set the handler at pos pos (in polygon coordinate) to color color\&. 
.PP
\fBParameters\fP
.RS 4
\fIpos\fP 
.br
\fIcolor\fP 
.RE
.PP

.PP
Reimplemented from \fBCustomElementGraphicPart\fP\&.
.SS "void PartPolygon::setLastPoint (const QPointF & point)"

.PP
\fBPartPolygon::setLastPoint\fP Set the last point of polygon to point\&. 
.PP
\fBParameters\fP
.RS 4
\fIpoint\fP 
.RE
.PP

.SS "void PartPolygon::setPolygon (const QPolygonF & polygon)"

.PP
\fBPartPolygon::setPolygon\fP Sets the item's polygon to be the given polygon\&. 
.PP
\fBParameters\fP
.RS 4
\fIpolygon\fP 
.RE
.PP

.SS "QPainterPath PartPolygon::shadowShape () const\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBCustomElementGraphicPart\fP\&.
.SS "QPainterPath PartPolygon::shape () const\fC [override]\fP"

.PP
\fBPartPolygon::shape\fP\&. 
.PP
\fBReturns\fP
.RS 4
the shape of this item 
.RE
.PP

.SS "void PartPolygon::startUserTransformation (const QRectF & initial_selection_rect)\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::startUserTransformation\fP Start the user-induced transformation, provided this primitive is contained within the initial_selection_rect bounding rectangle\&. 
.PP
\fBParameters\fP
.RS 4
\fIinitial_selection_rect\fP 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "const QDomElement PartPolygon::toXml (QDomDocument & xml_document) const\fC [override]\fP, \fC [virtual]\fP"

.PP
\fBPartPolygon::toXml\fP Export this polygin in xml\&. 
.PP
\fBParameters\fP
.RS 4
\fIxml_document\fP : Xml document to use for create the xml element 
.RE
.PP
\fBReturns\fP
.RS 4
an xml element that describe this polygon 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SS "int PartPolygon::type () const\fC [inline]\fP, \fC [override]\fP"
Enable the use of qgraphicsitem_cast to safely cast a QGraphicsItem into a \fBPartPolygon\fP\&. 
.PP
\fBReturns\fP
.RS 4
the QGraphicsItem type 
.RE
.PP

.SS "QString PartPolygon::xmlName () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
\fBReturns\fP
.RS 4
the name that will be used as XML tag when exporting the primitive 
.RE
.PP

.PP
Implements \fBCustomElementPart\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "bool PartPolygon::m_closed\fC [private]\fP"

.SS "QPointF PartPolygon::m_context_menu_pos\fC [private]\fP"

.SS "QVector<\fBQetGraphicsHandlerItem\fP *> PartPolygon::m_handler_vector\fC [private]\fP"

.SS "QAction* PartPolygon::m_insert_point\fC [private]\fP"

.SS "QPolygonF PartPolygon::m_polygon\fC [private]\fP"

.SS "QAction * PartPolygon::m_remove_point\fC [private]\fP"

.SS "\fBQPropertyUndoCommand\fP* PartPolygon::m_undo_command\fC [private]\fP"

.SS "int PartPolygon::m_vector_index = \-1\fC [private]\fP"

.SS "QList<QPointF> PartPolygon::saved_points_\fC [private]\fP"

.SH "Property Documentation"
.PP 
.SS "bool PartPolygon::closed\fC [read]\fP, \fC [write]\fP"

.SS "QPolygonF PartPolygon::polygon\fC [read]\fP, \fC [write]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for QElectroTech from the source code\&.
